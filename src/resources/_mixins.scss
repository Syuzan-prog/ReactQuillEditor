@import "./colors";

@import "./variables";

%flexCenterCenter {
    display: flex;
    align-items: center;
    justify-content: center;
}
 
%marginAuto {
    max-width: 1400px;
    margin: 0 auto;
}

@mixin titleStyle() {
    margin-top: 12px;
    color: #828282;
    font-size: 16px;
    letter-spacing: .44px;
    text-align: left;
}

@mixin dropdownStyle($width:169px) {
    width: $width;
    border: 1px solid $border-color;
    border-radius: $border-radius;
}

@mixin inputStyle($width:320px, $height:40px) {
    width: $width;
    height: $height;
    border: 1px solid $border-color;
    border-radius: $border-radius;
}

@mixin buttonStyle($width:auto, $height:40px, $background:$light-blue) {
    width: $width;
    height: $height;
    text-align: center;
    background: $background;
    border-radius: $border-radius;
}

@mixin containerStyle($margin:53px 0 65px 0, $padding: 10px) {
    margin: $margin;
    padding: $padding;
    background: $content-background;
    border-radius: $border-radius;
    box-shadow: 0px 10px 30px rgba(89, 157, 179, .2);
}

@mixin blockStyle($width: 500px, $padding: 17px 17px 33px ) {
    width: $width;
    padding: $padding;
    background: #ffffff;
    border: 1px solid $border-color;
    border-radius: 10px;
}

@mixin media($breakpoint) {
    $value: map-get($breakPoints, $breakpoint);

    @if $value !=null {
        $start: map-get($value, start);
        $end: map-get($value, end);

        @if $start==null {
            @media (max-width: $end) {
                @content;
            }
        }

        @else if $end==null {
            @media (min-width: $start) {
                @content;
            }
        }

        @else {
            @media (min-width: $start) and (max-width: $end) {
                @content;
            }
        }
    }

    @else {
        @warn "Invalid breakpoint `#{$breakpoint}`.";
    }
}